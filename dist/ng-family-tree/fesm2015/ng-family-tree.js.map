{"version":3,"file":"ng-family-tree.js.map","sources":["ng://ng-family-tree/lib/models/family.model.ts","ng://ng-family-tree/lib/ng-family-tree/ng-family-tree.component.ts","ng://ng-family-tree/lib/ng-family-tree/ft-leaf.component.ts","ng://ng-family-tree/lib/ng-family-tree.module.ts","ng://ng-family-tree/lib/models/node.model.ts"],"sourcesContent":["import { TreeNode } from './node.model';\n\nexport class Family {\n  id: string;\n  children: Family[] = [];\n  nodes: TreeNode[] = [];\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { Family } from '../models/family.model';\n\n@Component({\n  selector: 'ft-tree',\n  template: `\n    <div class=\"tree\">\n      <ul>\n        <li>\n          <div class=\"top\">\n            <span  *ngFor=\"let node of family.nodes\" (click)=\"_leafSelected(node)\"\n                   class=\"{{node.gender}}\"\n                   [ngClass]=\"node.relationship ? node.relationship + '-leaf' : ''\"\n                   class=\"node\">{{node.name}}</span>\n          </div>\n          <ul>\n            <li *ngFor=\"let child of family.children\" [ngStyle]=\"{'width': _setWidth(child) ? '100%' : 'auto'}\" >\n              <ft-leaf (onLeafSelected)=\"_leafSelected($event)\" [child]=\"child\"></ft-leaf>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  `,\n  styleUrls: ['./ng-family-tree.component.scss'],\n  styles: [],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgFamilyTreeComponent implements OnInit {\n\n  @Input() family: Family;\n  @Output() onLeafSelected: EventEmitter<Family> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  _leafSelected(_leaf) {\n    this.onLeafSelected.emit(_leaf);\n  }\n\n  _setWidth(child: Family) {\n    return child.nodes && child.nodes[0].relationship === 'self' && child.children.length < 2;\n  }\n}\n","\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Family } from '../models/family.model';\n\n@Component({\n  selector: 'ft-leaf',\n  template: `\n    <div>\n      <span  *ngFor=\"let node of child.nodes\" class=\"node\"\n             [ngClass]=\"node.relationship ? node.relationship + '-leaf' : ''\"\n             (click)=\"_leafSelected(node)\" [class]=\"node.gender\">{{node.name}}</span>\n    </div>\n    <ul *ngIf=\"child.children && child.children.length > 0\">\n      <li *ngFor=\"let row of child.children\" [ngStyle]=\"{'width': child.children.length === 1 ? '100%' : 'auto'}\">\n        <ft-leaf (onLeafSelected)=\"_leafSelected($event)\" [child]=\"row\"></ft-leaf>\n      </li>\n    </ul>\n  `\n})\nexport class FtLeafComponent {\n\n  @Input() child: Family;\n  @Output() onLeafSelected: EventEmitter<Family> = new EventEmitter();\n\n  constructor() { }\n\n  _leafSelected(_leaf) {\n    this.onLeafSelected.emit(_leaf);\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { NgFamilyTreeComponent } from './ng-family-tree/ng-family-tree.component';\nimport { FtLeafComponent } from './ng-family-tree/ft-leaf.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [NgFamilyTreeComponent, FtLeafComponent],\n  imports: [\n    CommonModule,\n  ],\n  exports: [NgFamilyTreeComponent]\n})\nexport class NgFamilyTreeModule { }\n","export class TreeNode {\n  name: string;\n  gender: string;\n  relationship: string;\n}\n"],"names":[],"mappings":";;;;;;;AAEA,MAAa,MAAM;IAAnB;QAEE,aAAQ,GAAa,EAAE,CAAC;QACxB,UAAK,GAAe,EAAE,CAAC;KACxB;CAAA;;;;;;ACND,MA4Ba,qBAAqB;IAKhC;QAFU,mBAAc,GAAyB,IAAI,YAAY,EAAE,CAAC;KAEnD;;;;IAEjB,QAAQ;KACP;;;;;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACjC;;;;;IAED,SAAS,CAAC,KAAa;QACrB,OAAO,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,KAAK,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;KAC3F;;;YAzCF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;GAkBT;gBAGD,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACtC;;;;;qBAGE,KAAK;6BACL,MAAM;;;;;;;AC9BT,MAkBa,eAAe;IAK1B;QAFU,mBAAc,GAAyB,IAAI,YAAY,EAAE,CAAC;KAEnD;;;;;IAEjB,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACjC;;;YAxBF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,QAAQ,EAAE;;;;;;;;;;;GAWT;aACF;;;;;oBAGE,KAAK;6BACL,MAAM;;;;;;;ACtBT,MAYa,kBAAkB;;;YAP9B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,qBAAqB,EAAE,eAAe,CAAC;gBACtD,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,OAAO,EAAE,CAAC,qBAAqB,CAAC;aACjC;;;;;;;ACXD,MAAa,QAAQ;CAIpB;;;;;;;;;;;;;;"}
